//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Java/src/test/java/harrycheung/map/PointTest.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Point.h"
#include "PointTest.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "org/hamcrest/CoreMatchers.h"
#include "org/hamcrest/Matcher.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

@implementation HCMPointTest

- (void)equals {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:14 withDouble:14] autorelease];
  HCMPoint *b = [[[HCMPoint alloc] initWithDouble:14 withDouble:14] autorelease];
  HCMPoint *c = [[[HCMPoint alloc] initWithDouble:25 withDouble:25] autorelease];
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(a, OrgHamcrestCoreMatchers_equalToWithId_(b));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(a, OrgHamcrestCoreMatchers_not__WithOrgHamcrestMatcher_(OrgHamcrestCoreMatchers_equalToWithId_(c)));
}

- (void)subtraction {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:5 withDouble:5] autorelease];
  HCMPoint *b = [[[HCMPoint alloc] initWithDouble:10 withDouble:10] autorelease];
  HCMPoint *c = [b subtractWithHCMPoint:a];
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([((HCMPoint *) nil_chk(c)) getLatitudeDegrees]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(5.0)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([c getLongitudeDegrees]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(5.0)));
}

- (void)bearingTo {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:5 withDouble:5] autorelease];
  HCMPoint *b = [[[HCMPoint alloc] initWithDouble:5 withDouble:10] autorelease];
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([a bearingToWithHCMPoint:b]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(89.781973)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([a bearingToWithHCMPoint:b withBoolean:YES]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(1.566991)));
}

- (void)destination {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:37.452602 withDouble:-122.207069] autorelease];
  HCMPoint *d = [a destinationWithDouble:308 withDouble:50];
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(d, OrgHamcrestCoreMatchers_equalToWithId_([[[HCMPoint alloc] initWithDouble:37.452879 withDouble:-122.207515] autorelease]));
}

- (void)distanceTo {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:50.06639 withDouble:-5.71472] autorelease];
  HCMPoint *b = [[[HCMPoint alloc] initWithDouble:58.64389 withDouble:-3.07000] autorelease];
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangInteger_valueOfWithInt_((jint) JavaLangMath_roundWithDouble_([a distanceToWithHCMPoint:b])), OrgHamcrestCoreMatchers_isWithId_(JavaLangInteger_valueOfWithInt_(968854)));
}

- (void)intersect {
  HCMPoint *a = [[[HCMPoint alloc] initWithDouble:5 withDouble:5] autorelease];
  HCMPoint *b = [[[HCMPoint alloc] initWithDouble:15 withDouble:15] autorelease];
  HCMPoint *c = [[[HCMPoint alloc] initWithDouble:5 withDouble:15] autorelease];
  HCMPoint *d = [[[HCMPoint alloc] initWithDouble:15 withDouble:5] autorelease];
  HCMPoint *i = HCMPoint_intersectVectorWithHCMPoint_withId_withHCMPoint_withId_(a, b, c, d);
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([((HCMPoint *) nil_chk(i)) getLatitudeDegrees]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(10.11503)));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(JavaLangDouble_valueOfWithDouble_([i getLongitudeDegrees]), OrgHamcrestCoreMatchers_isWithId_(JavaLangDouble_valueOfWithDouble_(10.0)));
  HCMPoint *p1 = [[[HCMPoint alloc] initWithDouble:51.8853 withDouble:0.2545] autorelease];
  jdouble brng1 = 108.55;
  HCMPoint *p2 = [[[HCMPoint alloc] initWithDouble:49.0034 withDouble:2.5735] autorelease];
  jdouble brng2 = 32.44;
  i = HCMPoint_intersectVectorWithHCMPoint_withId_withHCMPoint_withId_(p1, JavaLangDouble_valueOfWithDouble_(brng1), p2, JavaLangDouble_valueOfWithDouble_(brng2));
  OrgJunitAssert_assertThatWithId_withOrgHamcrestMatcher_(i, OrgHamcrestCoreMatchers_equalToWithId_([[[HCMPoint alloc] initWithDouble:50.907608 withDouble:4.508575] autorelease]));
}

- (instancetype)init {
  return [super init];
}

+ (IOSObjectArray *)__annotations_equals {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_subtraction {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_bearingTo {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_destination {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_distanceTo {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_intersect {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJunitTest alloc] initWithExpected:OrgJunitTest_None_class_() withTimeout:0] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "equals", NULL, "V", 0x1, NULL },
    { "subtraction", NULL, "V", 0x1, NULL },
    { "bearingTo", NULL, "V", 0x1, NULL },
    { "destination", NULL, "V", 0x1, NULL },
    { "distanceTo", NULL, "V", 0x1, NULL },
    { "intersect", NULL, "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _HCMPointTest = { 1, "PointTest", "harrycheung.map", NULL, 0x11, 7, methods, 0, NULL, 0, NULL};
  return &_HCMPointTest;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HCMPointTest)
